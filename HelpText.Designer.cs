//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DecisionServicePrivateWeb {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class HelpText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HelpText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DecisionServicePrivateWeb.HelpText", typeof(HelpText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Id ::: The name of this application, which becomes the Azure Resource Group name..
        /// </summary>
        public static string ApplicationId {
            get {
                return ResourceManager.GetString("ApplicationId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Insights Instrumentation Key ::: Application Insights is a diagnostics logging service to aid with debugging the system. By default, all components of the Decision Service send detailed logs to Application Insights. To log additional information, use the displayed instrumentation key to initialize the telemetry client..
        /// </summary>
        public static string ApplicationInsightsInstrumentationKey {
            get {
                return ResourceManager.GetString("ApplicationInsightsInstrumentationKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Stream Analytics Policy Evaluation ::: Decision Service has the ability to evaluate and compare many policies retrospectively. It achieves this partly by leveraging Azure Stream Analytics to collect real-time performance results of each policy. To see how this is done, view the policy evaluation query in ASA by clicking on the arrow to the right. .
        /// </summary>
        public static string ASAEvalName {
            get {
                return ResourceManager.GetString("ASAEvalName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Stream Analytics Join Server ::: Azure Stream Analytics is used to join interaction and observation data streams together. For more details view the join query in ASA by clicking on the arrow to the right..
        /// </summary>
        public static string ASAJoinName {
            get {
                return ResourceManager.GetString("ASAJoinName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Resource Group ::: Azure Resource Group name is the value chosen at deployment time. The resource group contains all Azure resources (such as cloud services, storage accounts, etc...) deployed as part of the Decision Service..
        /// </summary>
        public static string AzureResourceGroupName {
            get {
                return ResourceManager.GetString("AzureResourceGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Storage Connection String ::: Azure Storage contains all data produced and consumed by Decision Service. For example, the joined data and machine-learned models are created and stored here. The Azure Storage Connection String is needed to programmatically connect to the storage account and retrieve data. Click on the arrow to view these data from the Azure portal..
        /// </summary>
        public static string AzureStorageConnectionString {
            get {
                return ResourceManager.GetString("AzureStorageConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Subscription Id ::: The Id of the Azure Subscription containing all used for this deployment..
        /// </summary>
        public static string AzureSubscriptionId {
            get {
                return ResourceManager.GetString("AzureSubscriptionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Context Type ::: Whether the context uses action-dependent features or only regular features..
        /// </summary>
        public static string DecisionType {
            get {
                return ResourceManager.GetString("DecisionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Hub Interaction Connection String ::: Connection string of the Event Hub associated with ASA Join Server which accepts interaction data from the Client Library or Web Service...
        /// </summary>
        public static string EventHubInteractionConnectionString {
            get {
                return ResourceManager.GetString("EventHubInteractionConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Hub Observation Connection String ::: Connection string of the Event Hub associated with ASA Join Server which accepts observation data (i.e. rewards) from the Client Library or Web Service..
        /// </summary>
        public static string EventHubObservationConnectionString {
            get {
                return ResourceManager.GetString("EventHubObservationConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Join Timeout (in seconds) ::: The timeout duration of the interaction-observation join that occurs in ASA..
        /// </summary>
        public static string ExperimentalUnitDuration {
            get {
                return ResourceManager.GetString("ExperimentalUnitDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Exploration ::: Whether to enable exploration in Client Library or Web Service. This is useful as a safety mechanism in case exploration results in undesired application behavior..
        /// </summary>
        public static string IsExplorationEnabled {
            get {
                return ResourceManager.GetString("IsExplorationEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Actions ::: The number of actions, which is fixed for all interactions. This value is relevant only if not using action dependent features..
        /// </summary>
        public static string NumActions {
            get {
                return ResourceManager.GetString("NumActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online Trainer ::: The name of the cloud service that performs online training..
        /// </summary>
        public static string OnlineTrainerName {
            get {
                return ResourceManager.GetString("OnlineTrainerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Model to Deploy ::: The list of trained models detected in Azure Storage. The selected model will be deployed to all clients..
        /// </summary>
        public static string SelectedModelId {
            get {
                return ResourceManager.GetString("SelectedModelId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings Blob Address ::: The address of the settings for the application..
        /// </summary>
        public static string SettingsBlobUri {
            get {
                return ResourceManager.GetString("SettingsBlobUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VW Arguments ::: VW arguments that control training and exploration..
        /// </summary>
        public static string TrainArguments {
            get {
                return ResourceManager.GetString("TrainArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Training Frequency ::: High frequency corresponds to online training where data points are continuously used for learning. Low frequency corresponds to batch training which occurs at longer time intervals (e.g. every 5 minutes or once a day)..
        /// </summary>
        public static string TrainFrequency {
            get {
                return ResourceManager.GetString("TrainFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Endpoint ::: The address of the Web Service which can accept HTTP requests. This serves as an alternative data entry point to the Decision Service..
        /// </summary>
        public static string WebApiAddress {
            get {
                return ResourceManager.GetString("WebApiAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Management Center Address ::: The address of the Management Center..
        /// </summary>
        public static string WebManageName {
            get {
                return ResourceManager.GetString("WebManageName", resourceCulture);
            }
        }
    }
}
